config {
    type: "table"
  }


-- {{ config(enabled=fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_contact_list_enabled'])) }}

with contact_lists as (

    select *
    from {{ var('contact_list') }}

{% if fivetran_utils.enabled_vars(['hubspot_marketing_enabled', 'hubspot_email_event_enabled']) %}

), email_metrics as (

    select *
    from {{ ref('int_hubspot__email_metrics__by_contact_list') }}

), joined as (

    select 
        contact_lists.*,
        {% for metric in var('email_metrics') %}
        coalesce(email_metrics.total_{{ metric }}, 0) as total_{{ metric }},
        coalesce(email_metrics.total_unique_{{ metric }}, 0) as total_unique_{{ metric }}
        {% if not loop.last %},{% endif %}
        {% endfor %}
    from contact_lists
    left join email_metrics
        using (contact_list_id)

)

select *
from joined

{% else %}

)

select *
from contact_lists

{% endif %}
-- --------------------------------------------------------------------------------------------------------------------------------------------

with contact_lists as (

    select *
    from ${ ref('contact_list') }

)



js {
  
    function run() {
      if (fivetran_utils.enabled_vars([constants.hubspot_marketing_enabled, constants.hubspot_email_event_enabled])) {

        email_metrics_columns = []
        for (let i = 0; i < constants.email_metrics.length; i++) {
            line = "coalesce(email_metrics.total_"constants.email_metrics[i],", 0) as total_" constants.email_metrics[i],
            line = "coalesce(email_metrics.total_unique_"constants.email_metrics[i],", 0) as total_unique_" constants.email_metrics[i],
            email_metrics_columns.push(line)
        }

        query=`
,email_metrics as (

    select *
    from ${ ref('int_hubspot__email_metrics__by_contact_list') }

), joined as (

    select 
        contact_lists.*,
        -- {% for metric in var('email_metrics') %}
        -- coalesce(email_metrics.total_{{ metric }}, 0) as total_{{ metric }},
        -- coalesce(email_metrics.total_unique_{{ metric }}, 0) as total_unique_{{ metric }}
        -- {% if not loop.last %},{% endif %}
        -- {% endfor %}
        ${email_metrics_columns}

    from contact_lists
    left join email_metrics
        using (contact_list_id)

)

select *
from joined
`


  
        return query
      }
      else {
        query = `

select *
from contact_lists


`
      }
    }
  
  
  }
  
  ${run()}